2025-05-28 13:37:25,729 - INFO     - stress_script                  - stress.py:72 - File logging initialized (UTF-8). Log file: D:\business\3_Freelancing_Work Projects\3_Eco_wave_dynamis\01_Project_Files\15_Hono_Load_Testing\python-script-organize\run_results_20250528_133725\load_test_run.log λ ✅
2025-05-28 13:37:25,735 - DEBUG    - asyncio                        - proactor_events.py:633 - Using proactor: IocpProactor
2025-05-28 13:37:25,767 - INFO     - config.hono_config             - hono_config.py:136 - Loaded configuration: Registry=192.168.1.4:28443
2025-05-28 13:37:25,767 - INFO     - config.hono_config             - hono_config.py:137 - MQTT: 192.168.1.4:8883 (TLS: True)
2025-05-28 13:37:25,768 - INFO     - config.hono_config             - hono_config.py:138 - HTTP: 192.168.1.4:8443
2025-05-28 13:37:25,769 - INFO     - config.hono_config             - hono_config.py:140 - CA File Path: ../truststore.pem (Exists: True)
2025-05-28 13:37:25,769 - INFO     - core.infrastructure            - infrastructure.py:257 - Setting up 10 tenants with 100 devices total (throttled)...
2025-05-28 13:37:25,814 - INFO     - core.infrastructure            - infrastructure.py:264 - Using CA file for TLS: ../truststore.pem
2025-05-28 13:37:25,815 - WARNING  - core.infrastructure            - infrastructure.py:272 - SSL certificate verification is DISABLED.
2025-05-28 13:37:26,005 - INFO     - core.infrastructure            - infrastructure.py:291 - Successfully created 10 tenants for throttled setup.
2025-05-28 13:37:26,005 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 0/100: 0.35s
2025-05-28 13:37:26,005 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0000
2025-05-28 13:37:26,012 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0000 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:26,090 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0000 with password: this-is-my-password
2025-05-28 13:37:26,090 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0000
2025-05-28 13:37:26,090 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0000 (delay: 0.35s)
2025-05-28 13:37:26,090 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 1/100: 0.40s
2025-05-28 13:37:26,090 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.40s for device device-0001
2025-05-28 13:37:26,498 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0001
2025-05-28 13:37:26,517 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0001 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:26,601 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0001 with password: this-is-my-password
2025-05-28 13:37:26,601 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0001
2025-05-28 13:37:26,601 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0001 (delay: 0.40s)
2025-05-28 13:37:26,601 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 2/100: 0.50s
2025-05-28 13:37:26,601 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.50s for device device-0002
2025-05-28 13:37:27,111 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0002
2025-05-28 13:37:27,127 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0002 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:27,217 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0002 with password: this-is-my-password
2025-05-28 13:37:27,217 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0002
2025-05-28 13:37:27,218 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0002 (delay: 0.50s)
2025-05-28 13:37:27,218 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 3/100: 0.27s
2025-05-28 13:37:27,218 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.27s for device device-0003
2025-05-28 13:37:27,496 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0003
2025-05-28 13:37:27,511 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0003 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:27,613 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0003 with password: this-is-my-password
2025-05-28 13:37:27,613 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0003
2025-05-28 13:37:27,613 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0003 (delay: 0.27s)
2025-05-28 13:37:27,614 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 4/100: 0.31s
2025-05-28 13:37:27,614 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.31s for device device-0004
2025-05-28 13:37:27,931 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0004
2025-05-28 13:37:27,941 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0004 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:28,032 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0004 with password: this-is-my-password
2025-05-28 13:37:28,032 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0004
2025-05-28 13:37:28,032 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0004 (delay: 0.31s)
2025-05-28 13:37:28,032 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 5/100: 0.39s
2025-05-28 13:37:28,032 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.39s for device device-0005
2025-05-28 13:37:28,427 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0005
2025-05-28 13:37:28,444 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0005 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:28,543 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0005 with password: this-is-my-password
2025-05-28 13:37:28,543 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0005
2025-05-28 13:37:28,543 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0005 (delay: 0.39s)
2025-05-28 13:37:28,543 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 6/100: 0.27s
2025-05-28 13:37:28,543 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.27s for device device-0006
2025-05-28 13:37:28,818 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0006
2025-05-28 13:37:28,834 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0006 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:28,987 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0006 with password: this-is-my-password
2025-05-28 13:37:28,987 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0006
2025-05-28 13:37:28,987 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0006 (delay: 0.27s)
2025-05-28 13:37:28,987 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 7/100: 0.42s
2025-05-28 13:37:28,988 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.42s for device device-0007
2025-05-28 13:37:29,422 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0007
2025-05-28 13:37:29,445 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0007 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:29,534 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0007 with password: this-is-my-password
2025-05-28 13:37:29,534 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0007
2025-05-28 13:37:29,535 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0007 (delay: 0.42s)
2025-05-28 13:37:29,535 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 8/100: 0.44s
2025-05-28 13:37:29,535 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.44s for device device-0008
2025-05-28 13:37:29,984 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0008
2025-05-28 13:37:29,999 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0008 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:30,100 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0008 with password: this-is-my-password
2025-05-28 13:37:30,100 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0008
2025-05-28 13:37:30,101 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0008 (delay: 0.44s)
2025-05-28 13:37:30,101 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 9/100: 0.37s
2025-05-28 13:37:30,101 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.37s for device device-0009
2025-05-28 13:37:30,482 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/6ea6d679-38fa-412d-aea0-802d742e9079/device-0009
2025-05-28 13:37:30,497 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0009 created in tenant 6ea6d679-38fa-412d-aea0-802d742e9079
2025-05-28 13:37:30,601 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0009 with password: this-is-my-password
2025-05-28 13:37:30,601 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0009
2025-05-28 13:37:30,601 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0009 (delay: 0.37s)
2025-05-28 13:37:30,602 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 10/100: 0.44s
2025-05-28 13:37:30,602 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.44s for device device-0010
2025-05-28 13:37:31,042 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0010
2025-05-28 13:37:31,057 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0010 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:31,162 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0010 with password: this-is-my-password
2025-05-28 13:37:31,162 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0010
2025-05-28 13:37:31,163 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0010 (delay: 0.44s)
2025-05-28 13:37:31,163 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 11/100: 0.43s
2025-05-28 13:37:31,163 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.43s for device device-0011
2025-05-28 13:37:31,604 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0011
2025-05-28 13:37:31,619 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0011 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:31,720 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0011 with password: this-is-my-password
2025-05-28 13:37:31,720 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0011
2025-05-28 13:37:31,720 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0011 (delay: 0.43s)
2025-05-28 13:37:31,720 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 12/100: 0.46s
2025-05-28 13:37:31,721 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.46s for device device-0012
2025-05-28 13:37:32,181 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0012
2025-05-28 13:37:32,197 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0012 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:32,307 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0012 with password: this-is-my-password
2025-05-28 13:37:32,308 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0012
2025-05-28 13:37:32,308 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0012 (delay: 0.46s)
2025-05-28 13:37:32,308 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 13/100: 0.44s
2025-05-28 13:37:32,308 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.44s for device device-0013
2025-05-28 13:37:32,754 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0013
2025-05-28 13:37:32,765 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0013 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:32,838 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0013 with password: this-is-my-password
2025-05-28 13:37:32,838 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0013
2025-05-28 13:37:32,839 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0013 (delay: 0.44s)
2025-05-28 13:37:32,839 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 14/100: 0.35s
2025-05-28 13:37:32,839 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.35s for device device-0014
2025-05-28 13:37:33,192 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0014
2025-05-28 13:37:33,202 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0014 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:33,310 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0014 with password: this-is-my-password
2025-05-28 13:37:33,310 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0014
2025-05-28 13:37:33,310 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0014 (delay: 0.35s)
2025-05-28 13:37:33,310 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 15/100: 0.44s
2025-05-28 13:37:33,310 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.44s for device device-0015
2025-05-28 13:37:33,764 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0015
2025-05-28 13:37:33,778 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0015 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:33,882 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0015 with password: this-is-my-password
2025-05-28 13:37:33,882 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0015
2025-05-28 13:37:33,882 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0015 (delay: 0.44s)
2025-05-28 13:37:33,882 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 16/100: 0.57s
2025-05-28 13:37:33,882 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.57s for device device-0016
2025-05-28 13:37:34,462 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0016
2025-05-28 13:37:34,477 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0016 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:34,583 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0016 with password: this-is-my-password
2025-05-28 13:37:34,583 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0016
2025-05-28 13:37:34,583 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0016 (delay: 0.57s)
2025-05-28 13:37:34,583 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 17/100: 0.31s
2025-05-28 13:37:34,583 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.31s for device device-0017
2025-05-28 13:37:34,897 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0017
2025-05-28 13:37:34,913 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0017 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:35,013 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0017 with password: this-is-my-password
2025-05-28 13:37:35,013 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0017
2025-05-28 13:37:35,014 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0017 (delay: 0.31s)
2025-05-28 13:37:35,014 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 18/100: 0.53s
2025-05-28 13:37:35,014 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.53s for device device-0018
2025-05-28 13:37:35,553 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0018
2025-05-28 13:37:35,569 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0018 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:35,678 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0018 with password: this-is-my-password
2025-05-28 13:37:35,679 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0018
2025-05-28 13:37:35,680 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0018 (delay: 0.53s)
2025-05-28 13:37:35,680 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 19/100: 0.50s
2025-05-28 13:37:35,680 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.50s for device device-0019
2025-05-28 13:37:36,190 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9986a3a3-88be-4064-a7cc-0d9867beca22/device-0019
2025-05-28 13:37:36,206 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0019 created in tenant 9986a3a3-88be-4064-a7cc-0d9867beca22
2025-05-28 13:37:36,304 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0019 with password: this-is-my-password
2025-05-28 13:37:36,304 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0019
2025-05-28 13:37:36,304 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0019 (delay: 0.50s)
2025-05-28 13:37:36,304 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 20/100: 0.41s
2025-05-28 13:37:36,304 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.41s for device device-0020
2025-05-28 13:37:36,721 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0020
2025-05-28 13:37:36,735 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0020 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:36,833 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0020 with password: this-is-my-password
2025-05-28 13:37:36,833 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0020
2025-05-28 13:37:36,833 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0020 (delay: 0.41s)
2025-05-28 13:37:36,833 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 21/100: 0.45s
2025-05-28 13:37:36,833 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.45s for device device-0021
2025-05-28 13:37:37,296 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0021
2025-05-28 13:37:37,311 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0021 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:37,405 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0021 with password: this-is-my-password
2025-05-28 13:37:37,406 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0021
2025-05-28 13:37:37,406 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0021 (delay: 0.45s)
2025-05-28 13:37:37,406 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 22/100: 0.36s
2025-05-28 13:37:37,406 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.36s for device device-0022
2025-05-28 13:37:37,763 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0022
2025-05-28 13:37:37,779 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0022 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:37,881 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0022 with password: this-is-my-password
2025-05-28 13:37:37,881 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0022
2025-05-28 13:37:37,882 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0022 (delay: 0.36s)
2025-05-28 13:37:37,882 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 23/100: 0.54s
2025-05-28 13:37:37,882 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.54s for device device-0023
2025-05-28 13:37:38,432 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0023
2025-05-28 13:37:38,448 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0023 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:38,547 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0023 with password: this-is-my-password
2025-05-28 13:37:38,547 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0023
2025-05-28 13:37:38,548 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0023 (delay: 0.54s)
2025-05-28 13:37:38,548 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 24/100: 0.60s
2025-05-28 13:37:38,548 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.60s for device device-0024
2025-05-28 13:37:39,165 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0024
2025-05-28 13:37:39,187 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0024 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:39,291 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0024 with password: this-is-my-password
2025-05-28 13:37:39,291 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0024
2025-05-28 13:37:39,292 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0024 (delay: 0.60s)
2025-05-28 13:37:39,292 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 25/100: 0.55s
2025-05-28 13:37:39,292 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.55s for device device-0025
2025-05-28 13:37:39,849 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0025
2025-05-28 13:37:39,863 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0025 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:39,969 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0025 with password: this-is-my-password
2025-05-28 13:37:39,969 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0025
2025-05-28 13:37:39,970 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0025 (delay: 0.55s)
2025-05-28 13:37:39,970 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 26/100: 0.40s
2025-05-28 13:37:39,970 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.40s for device device-0026
2025-05-28 13:37:40,378 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0026
2025-05-28 13:37:40,392 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0026 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:40,496 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0026 with password: this-is-my-password
2025-05-28 13:37:40,496 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0026
2025-05-28 13:37:40,497 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0026 (delay: 0.40s)
2025-05-28 13:37:40,497 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 27/100: 0.56s
2025-05-28 13:37:40,497 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.56s for device device-0027
2025-05-28 13:37:41,063 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0027
2025-05-28 13:37:41,077 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0027 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:41,173 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0027 with password: this-is-my-password
2025-05-28 13:37:41,173 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0027
2025-05-28 13:37:41,173 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0027 (delay: 0.56s)
2025-05-28 13:37:41,174 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 28/100: 0.53s
2025-05-28 13:37:41,174 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.53s for device device-0028
2025-05-28 13:37:41,717 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0028
2025-05-28 13:37:41,732 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0028 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:41,831 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0028 with password: this-is-my-password
2025-05-28 13:37:41,831 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0028
2025-05-28 13:37:41,831 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0028 (delay: 0.53s)
2025-05-28 13:37:41,831 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 29/100: 0.44s
2025-05-28 13:37:41,831 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.44s for device device-0029
2025-05-28 13:37:42,281 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/d43d7604-0256-4e00-b5ec-0bd030ace619/device-0029
2025-05-28 13:37:42,296 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0029 created in tenant d43d7604-0256-4e00-b5ec-0bd030ace619
2025-05-28 13:37:42,397 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0029 with password: this-is-my-password
2025-05-28 13:37:42,397 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0029
2025-05-28 13:37:42,398 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0029 (delay: 0.44s)
2025-05-28 13:37:42,398 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 30/100: 0.36s
2025-05-28 13:37:42,398 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.36s for device device-0030
2025-05-28 13:37:42,762 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0030
2025-05-28 13:37:42,770 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0030 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:42,844 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0030 with password: this-is-my-password
2025-05-28 13:37:42,844 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0030
2025-05-28 13:37:42,844 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0030 (delay: 0.36s)
2025-05-28 13:37:42,844 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 31/100: 0.47s
2025-05-28 13:37:42,844 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.47s for device device-0031
2025-05-28 13:37:43,326 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0031
2025-05-28 13:37:43,370 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0031 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:43,474 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0031 with password: this-is-my-password
2025-05-28 13:37:43,474 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0031
2025-05-28 13:37:43,475 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0031 (delay: 0.47s)
2025-05-28 13:37:43,475 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 32/100: 0.50s
2025-05-28 13:37:43,475 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.50s for device device-0032
2025-05-28 13:37:43,992 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0032
2025-05-28 13:37:44,007 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0032 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:44,091 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0032 with password: this-is-my-password
2025-05-28 13:37:44,091 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0032
2025-05-28 13:37:44,092 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0032 (delay: 0.50s)
2025-05-28 13:37:44,092 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 33/100: 0.56s
2025-05-28 13:37:44,092 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.56s for device device-0033
2025-05-28 13:37:44,667 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0033
2025-05-28 13:37:44,682 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0033 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:44,781 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0033 with password: this-is-my-password
2025-05-28 13:37:44,781 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0033
2025-05-28 13:37:44,782 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0033 (delay: 0.56s)
2025-05-28 13:37:44,782 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 34/100: 0.49s
2025-05-28 13:37:44,782 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.49s for device device-0034
2025-05-28 13:37:45,276 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0034
2025-05-28 13:37:45,291 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0034 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:45,391 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0034 with password: this-is-my-password
2025-05-28 13:37:45,391 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0034
2025-05-28 13:37:45,392 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0034 (delay: 0.49s)
2025-05-28 13:37:45,392 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 35/100: 0.52s
2025-05-28 13:37:45,392 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.52s for device device-0035
2025-05-28 13:37:45,917 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0035
2025-05-28 13:37:45,933 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0035 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:46,035 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0035 with password: this-is-my-password
2025-05-28 13:37:46,035 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0035
2025-05-28 13:37:46,036 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0035 (delay: 0.52s)
2025-05-28 13:37:46,036 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 36/100: 0.38s
2025-05-28 13:37:46,036 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.38s for device device-0036
2025-05-28 13:37:46,431 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0036
2025-05-28 13:37:46,446 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0036 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:46,544 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0036 with password: this-is-my-password
2025-05-28 13:37:46,545 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0036
2025-05-28 13:37:46,545 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0036 (delay: 0.38s)
2025-05-28 13:37:46,545 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 37/100: 0.41s
2025-05-28 13:37:46,545 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.41s for device device-0037
2025-05-28 13:37:46,956 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0037
2025-05-28 13:37:46,970 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0037 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:47,070 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0037 with password: this-is-my-password
2025-05-28 13:37:47,070 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0037
2025-05-28 13:37:47,070 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0037 (delay: 0.41s)
2025-05-28 13:37:47,070 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 38/100: 0.65s
2025-05-28 13:37:47,070 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.65s for device device-0038
2025-05-28 13:37:47,728 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0038
2025-05-28 13:37:47,742 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0038 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:47,845 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0038 with password: this-is-my-password
2025-05-28 13:37:47,845 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0038
2025-05-28 13:37:47,846 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0038 (delay: 0.65s)
2025-05-28 13:37:47,846 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 39/100: 0.59s
2025-05-28 13:37:47,846 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.59s for device device-0039
2025-05-28 13:37:48,446 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/68f8f90b-9c13-4882-a41d-443fffcf390b/device-0039
2025-05-28 13:37:48,462 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0039 created in tenant 68f8f90b-9c13-4882-a41d-443fffcf390b
2025-05-28 13:37:48,565 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0039 with password: this-is-my-password
2025-05-28 13:37:48,565 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0039
2025-05-28 13:37:48,565 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0039 (delay: 0.59s)
2025-05-28 13:37:48,565 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 40/100: 0.55s
2025-05-28 13:37:48,565 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.55s for device device-0040
2025-05-28 13:37:49,116 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0040
2025-05-28 13:37:49,130 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0040 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:49,231 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0040 with password: this-is-my-password
2025-05-28 13:37:49,231 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0040
2025-05-28 13:37:49,231 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0040 (delay: 0.55s)
2025-05-28 13:37:49,231 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 41/100: 0.47s
2025-05-28 13:37:49,231 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.47s for device device-0041
2025-05-28 13:37:49,720 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0041
2025-05-28 13:37:49,735 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0041 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:49,837 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0041 with password: this-is-my-password
2025-05-28 13:37:49,837 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0041
2025-05-28 13:37:49,838 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0041 (delay: 0.47s)
2025-05-28 13:37:49,838 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 42/100: 0.51s
2025-05-28 13:37:49,838 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.51s for device device-0042
2025-05-28 13:37:50,361 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0042
2025-05-28 13:37:50,376 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0042 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:50,482 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0042 with password: this-is-my-password
2025-05-28 13:37:50,482 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0042
2025-05-28 13:37:50,482 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0042 (delay: 0.51s)
2025-05-28 13:37:50,483 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 43/100: 0.65s
2025-05-28 13:37:50,483 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.65s for device device-0043
2025-05-28 13:37:51,138 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0043
2025-05-28 13:37:51,153 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0043 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:51,245 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0043 with password: this-is-my-password
2025-05-28 13:37:51,245 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0043
2025-05-28 13:37:51,246 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0043 (delay: 0.65s)
2025-05-28 13:37:51,246 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 44/100: 0.64s
2025-05-28 13:37:51,246 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.64s for device device-0044
2025-05-28 13:37:51,891 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0044
2025-05-28 13:37:51,912 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0044 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:52,013 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0044 with password: this-is-my-password
2025-05-28 13:37:52,013 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0044
2025-05-28 13:37:52,013 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0044 (delay: 0.64s)
2025-05-28 13:37:52,013 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 45/100: 0.70s
2025-05-28 13:37:52,013 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.70s for device device-0045
2025-05-28 13:37:52,718 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0045
2025-05-28 13:37:52,726 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0045 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:52,798 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0045 with password: this-is-my-password
2025-05-28 13:37:52,799 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0045
2025-05-28 13:37:52,799 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0045 (delay: 0.70s)
2025-05-28 13:37:52,799 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 46/100: 0.73s
2025-05-28 13:37:52,799 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.73s for device device-0046
2025-05-28 13:37:53,542 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0046
2025-05-28 13:37:53,558 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0046 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:53,664 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0046 with password: this-is-my-password
2025-05-28 13:37:53,664 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0046
2025-05-28 13:37:53,664 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0046 (delay: 0.73s)
2025-05-28 13:37:53,664 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 47/100: 0.68s
2025-05-28 13:37:53,664 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.68s for device device-0047
2025-05-28 13:37:54,351 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0047
2025-05-28 13:37:54,367 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0047 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:54,470 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0047 with password: this-is-my-password
2025-05-28 13:37:54,470 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0047
2025-05-28 13:37:54,471 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0047 (delay: 0.68s)
2025-05-28 13:37:54,471 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 48/100: 0.68s
2025-05-28 13:37:54,471 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.68s for device device-0048
2025-05-28 13:37:55,161 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0048
2025-05-28 13:37:55,211 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0048 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:55,314 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0048 with password: this-is-my-password
2025-05-28 13:37:55,314 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0048
2025-05-28 13:37:55,315 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0048 (delay: 0.68s)
2025-05-28 13:37:55,315 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 49/100: 0.49s
2025-05-28 13:37:55,315 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.49s for device device-0049
2025-05-28 13:37:55,816 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/4656665b-2662-4110-abc1-45e12fdee375/device-0049
2025-05-28 13:37:55,831 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0049 created in tenant 4656665b-2662-4110-abc1-45e12fdee375
2025-05-28 13:37:55,934 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0049 with password: this-is-my-password
2025-05-28 13:37:55,934 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0049
2025-05-28 13:37:55,934 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0049 (delay: 0.49s)
2025-05-28 13:37:55,934 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 50/100: 0.64s
2025-05-28 13:37:55,935 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.64s for device device-0050
2025-05-28 13:37:56,579 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0050
2025-05-28 13:37:56,595 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0050 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:37:56,699 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0050 with password: this-is-my-password
2025-05-28 13:37:56,699 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0050
2025-05-28 13:37:56,700 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0050 (delay: 0.64s)
2025-05-28 13:37:56,700 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 51/100: 0.70s
2025-05-28 13:37:56,700 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.70s for device device-0051
2025-05-28 13:37:57,407 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0051
2025-05-28 13:37:57,422 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0051 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:37:57,527 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0051 with password: this-is-my-password
2025-05-28 13:37:57,527 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0051
2025-05-28 13:37:57,527 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0051 (delay: 0.70s)
2025-05-28 13:37:57,527 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 52/100: 0.64s
2025-05-28 13:37:57,527 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.64s for device device-0052
2025-05-28 13:37:58,185 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0052
2025-05-28 13:37:58,200 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0052 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:37:58,304 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0052 with password: this-is-my-password
2025-05-28 13:37:58,304 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0052
2025-05-28 13:37:58,305 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0052 (delay: 0.64s)
2025-05-28 13:37:58,305 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 53/100: 0.63s
2025-05-28 13:37:58,305 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.63s for device device-0053
2025-05-28 13:37:58,947 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0053
2025-05-28 13:37:58,970 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0053 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:37:59,053 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0053 with password: this-is-my-password
2025-05-28 13:37:59,054 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0053
2025-05-28 13:37:59,054 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0053 (delay: 0.63s)
2025-05-28 13:37:59,054 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 54/100: 0.70s
2025-05-28 13:37:59,054 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.70s for device device-0054
2025-05-28 13:37:59,754 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0054
2025-05-28 13:37:59,769 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0054 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:37:59,871 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0054 with password: this-is-my-password
2025-05-28 13:37:59,871 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0054
2025-05-28 13:37:59,872 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0054 (delay: 0.70s)
2025-05-28 13:37:59,872 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 55/100: 0.65s
2025-05-28 13:37:59,872 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.65s for device device-0055
2025-05-28 13:38:00,529 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0055
2025-05-28 13:38:00,543 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0055 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:38:00,644 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0055 with password: this-is-my-password
2025-05-28 13:38:00,644 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0055
2025-05-28 13:38:00,644 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0055 (delay: 0.65s)
2025-05-28 13:38:00,644 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 56/100: 0.72s
2025-05-28 13:38:00,644 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.72s for device device-0056
2025-05-28 13:38:01,369 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0056
2025-05-28 13:38:01,385 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0056 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:38:01,489 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0056 with password: this-is-my-password
2025-05-28 13:38:01,489 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0056
2025-05-28 13:38:01,490 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0056 (delay: 0.72s)
2025-05-28 13:38:01,490 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 57/100: 0.76s
2025-05-28 13:38:01,490 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.76s for device device-0057
2025-05-28 13:38:02,268 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0057
2025-05-28 13:38:02,284 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0057 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:38:02,385 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0057 with password: this-is-my-password
2025-05-28 13:38:02,386 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0057
2025-05-28 13:38:02,386 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0057 (delay: 0.76s)
2025-05-28 13:38:02,386 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 58/100: 0.59s
2025-05-28 13:38:02,386 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.59s for device device-0058
2025-05-28 13:38:02,987 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0058
2025-05-28 13:38:03,001 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0058 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:38:03,083 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0058 with password: this-is-my-password
2025-05-28 13:38:03,083 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0058
2025-05-28 13:38:03,083 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0058 (delay: 0.59s)
2025-05-28 13:38:03,083 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 59/100: 0.77s
2025-05-28 13:38:03,083 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.77s for device device-0059
2025-05-28 13:38:03,863 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/f0185f57-6969-4bca-8021-c369ba735bbe/device-0059
2025-05-28 13:38:03,891 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0059 created in tenant f0185f57-6969-4bca-8021-c369ba735bbe
2025-05-28 13:38:03,985 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0059 with password: this-is-my-password
2025-05-28 13:38:03,985 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0059
2025-05-28 13:38:03,986 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0059 (delay: 0.77s)
2025-05-28 13:38:03,986 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 60/100: 0.64s
2025-05-28 13:38:03,986 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.64s for device device-0060
2025-05-28 13:38:04,637 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0060
2025-05-28 13:38:04,653 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0060 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:04,753 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0060 with password: this-is-my-password
2025-05-28 13:38:04,753 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0060
2025-05-28 13:38:04,754 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0060 (delay: 0.64s)
2025-05-28 13:38:04,754 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 61/100: 0.67s
2025-05-28 13:38:04,754 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.67s for device device-0061
2025-05-28 13:38:05,431 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0061
2025-05-28 13:38:05,445 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0061 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:05,550 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0061 with password: this-is-my-password
2025-05-28 13:38:05,550 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0061
2025-05-28 13:38:05,551 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0061 (delay: 0.67s)
2025-05-28 13:38:05,551 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 62/100: 0.51s
2025-05-28 13:38:05,551 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.51s for device device-0062
2025-05-28 13:38:06,073 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0062
2025-05-28 13:38:06,089 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0062 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:06,199 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0062 with password: this-is-my-password
2025-05-28 13:38:06,199 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0062
2025-05-28 13:38:06,200 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0062 (delay: 0.51s)
2025-05-28 13:38:06,200 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 63/100: 0.60s
2025-05-28 13:38:06,200 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.60s for device device-0063
2025-05-28 13:38:06,804 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0063
2025-05-28 13:38:06,819 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0063 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:06,920 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0063 with password: this-is-my-password
2025-05-28 13:38:06,920 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0063
2025-05-28 13:38:06,921 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0063 (delay: 0.60s)
2025-05-28 13:38:06,921 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 64/100: 0.77s
2025-05-28 13:38:06,921 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.77s for device device-0064
2025-05-28 13:38:07,708 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0064
2025-05-28 13:38:07,722 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0064 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:07,822 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0064 with password: this-is-my-password
2025-05-28 13:38:07,822 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0064
2025-05-28 13:38:07,823 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0064 (delay: 0.77s)
2025-05-28 13:38:07,823 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 65/100: 0.71s
2025-05-28 13:38:07,823 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.71s for device device-0065
2025-05-28 13:38:08,547 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0065
2025-05-28 13:38:08,561 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0065 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:08,664 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0065 with password: this-is-my-password
2025-05-28 13:38:08,664 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0065
2025-05-28 13:38:08,664 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0065 (delay: 0.71s)
2025-05-28 13:38:08,664 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 66/100: 0.62s
2025-05-28 13:38:08,665 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.62s for device device-0066
2025-05-28 13:38:09,294 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0066
2025-05-28 13:38:09,310 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0066 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:09,401 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0066 with password: this-is-my-password
2025-05-28 13:38:09,401 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0066
2025-05-28 13:38:09,401 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0066 (delay: 0.62s)
2025-05-28 13:38:09,401 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 67/100: 0.71s
2025-05-28 13:38:09,401 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.71s for device device-0067
2025-05-28 13:38:10,120 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0067
2025-05-28 13:38:10,135 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0067 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:10,234 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0067 with password: this-is-my-password
2025-05-28 13:38:10,234 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0067
2025-05-28 13:38:10,235 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0067 (delay: 0.71s)
2025-05-28 13:38:10,235 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 68/100: 0.72s
2025-05-28 13:38:10,235 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.72s for device device-0068
2025-05-28 13:38:10,960 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0068
2025-05-28 13:38:10,975 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0068 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:11,079 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0068 with password: this-is-my-password
2025-05-28 13:38:11,079 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0068
2025-05-28 13:38:11,079 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0068 (delay: 0.72s)
2025-05-28 13:38:11,080 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 69/100: 0.66s
2025-05-28 13:38:11,080 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.66s for device device-0069
2025-05-28 13:38:11,739 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/681fb8d4-3cbd-4c14-a124-fcb7c78d934a/device-0069
2025-05-28 13:38:11,753 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0069 created in tenant 681fb8d4-3cbd-4c14-a124-fcb7c78d934a
2025-05-28 13:38:11,859 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0069 with password: this-is-my-password
2025-05-28 13:38:11,859 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0069
2025-05-28 13:38:11,860 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0069 (delay: 0.66s)
2025-05-28 13:38:11,860 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 70/100: 0.68s
2025-05-28 13:38:11,860 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.68s for device device-0070
2025-05-28 13:38:12,548 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0070
2025-05-28 13:38:12,556 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0070 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:12,628 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0070 with password: this-is-my-password
2025-05-28 13:38:12,628 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0070
2025-05-28 13:38:12,628 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0070 (delay: 0.68s)
2025-05-28 13:38:12,628 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 71/100: 0.76s
2025-05-28 13:38:12,629 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.76s for device device-0071
2025-05-28 13:38:13,400 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0071
2025-05-28 13:38:13,414 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0071 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:13,516 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0071 with password: this-is-my-password
2025-05-28 13:38:13,516 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0071
2025-05-28 13:38:13,516 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0071 (delay: 0.76s)
2025-05-28 13:38:13,516 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 72/100: 0.81s
2025-05-28 13:38:13,516 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.81s for device device-0072
2025-05-28 13:38:14,335 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0072
2025-05-28 13:38:14,349 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0072 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:14,455 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0072 with password: this-is-my-password
2025-05-28 13:38:14,455 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0072
2025-05-28 13:38:14,455 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0072 (delay: 0.81s)
2025-05-28 13:38:14,455 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 73/100: 0.85s
2025-05-28 13:38:14,455 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.85s for device device-0073
2025-05-28 13:38:15,315 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0073
2025-05-28 13:38:15,333 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0073 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:15,435 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0073 with password: this-is-my-password
2025-05-28 13:38:15,435 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0073
2025-05-28 13:38:15,435 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0073 (delay: 0.85s)
2025-05-28 13:38:15,435 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 74/100: 0.61s
2025-05-28 13:38:15,435 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.61s for device device-0074
2025-05-28 13:38:16,046 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0074
2025-05-28 13:38:16,061 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0074 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:16,163 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0074 with password: this-is-my-password
2025-05-28 13:38:16,163 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0074
2025-05-28 13:38:16,163 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0074 (delay: 0.61s)
2025-05-28 13:38:16,163 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 75/100: 0.87s
2025-05-28 13:38:16,163 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.87s for device device-0075
2025-05-28 13:38:17,043 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0075
2025-05-28 13:38:17,058 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0075 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:17,164 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0075 with password: this-is-my-password
2025-05-28 13:38:17,164 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0075
2025-05-28 13:38:17,164 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0075 (delay: 0.87s)
2025-05-28 13:38:17,164 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 76/100: 0.73s
2025-05-28 13:38:17,164 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.73s for device device-0076
2025-05-28 13:38:17,898 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0076
2025-05-28 13:38:17,918 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0076 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:18,000 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0076 with password: this-is-my-password
2025-05-28 13:38:18,000 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0076
2025-05-28 13:38:18,000 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0076 (delay: 0.73s)
2025-05-28 13:38:18,000 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 77/100: 0.77s
2025-05-28 13:38:18,000 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.77s for device device-0077
2025-05-28 13:38:18,771 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0077
2025-05-28 13:38:18,786 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0077 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:18,888 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0077 with password: this-is-my-password
2025-05-28 13:38:18,888 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0077
2025-05-28 13:38:18,889 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0077 (delay: 0.77s)
2025-05-28 13:38:18,889 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 78/100: 0.59s
2025-05-28 13:38:18,890 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.59s for device device-0078
2025-05-28 13:38:19,488 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0078
2025-05-28 13:38:19,502 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0078 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:19,598 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0078 with password: this-is-my-password
2025-05-28 13:38:19,598 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0078
2025-05-28 13:38:19,599 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0078 (delay: 0.59s)
2025-05-28 13:38:19,599 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 79/100: 0.78s
2025-05-28 13:38:19,599 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.78s for device device-0079
2025-05-28 13:38:20,391 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/509798f1-85a5-462a-ad3a-02f768f4a55d/device-0079
2025-05-28 13:38:20,406 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0079 created in tenant 509798f1-85a5-462a-ad3a-02f768f4a55d
2025-05-28 13:38:20,511 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0079 with password: this-is-my-password
2025-05-28 13:38:20,511 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0079
2025-05-28 13:38:20,511 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0079 (delay: 0.78s)
2025-05-28 13:38:20,511 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 80/100: 0.85s
2025-05-28 13:38:20,511 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.85s for device device-0080
2025-05-28 13:38:21,370 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0080
2025-05-28 13:38:21,379 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0080 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:21,476 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0080 with password: this-is-my-password
2025-05-28 13:38:21,477 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0080
2025-05-28 13:38:21,477 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0080 (delay: 0.85s)
2025-05-28 13:38:21,477 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 81/100: 0.77s
2025-05-28 13:38:21,477 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.77s for device device-0081
2025-05-28 13:38:22,256 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0081
2025-05-28 13:38:22,270 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0081 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:22,380 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0081 with password: this-is-my-password
2025-05-28 13:38:22,380 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0081
2025-05-28 13:38:22,380 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0081 (delay: 0.77s)
2025-05-28 13:38:22,380 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 82/100: 0.72s
2025-05-28 13:38:22,380 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.72s for device device-0082
2025-05-28 13:38:23,109 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0082
2025-05-28 13:38:23,189 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0082 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:23,290 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0082 with password: this-is-my-password
2025-05-28 13:38:23,290 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0082
2025-05-28 13:38:23,290 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0082 (delay: 0.72s)
2025-05-28 13:38:23,290 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 83/100: 0.82s
2025-05-28 13:38:23,290 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.82s for device device-0083
2025-05-28 13:38:24,119 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0083
2025-05-28 13:38:24,173 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0083 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:24,282 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0083 with password: this-is-my-password
2025-05-28 13:38:24,282 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0083
2025-05-28 13:38:24,282 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0083 (delay: 0.82s)
2025-05-28 13:38:24,282 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 84/100: 0.72s
2025-05-28 13:38:24,282 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.72s for device device-0084
2025-05-28 13:38:25,020 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0084
2025-05-28 13:38:25,034 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0084 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:25,140 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0084 with password: this-is-my-password
2025-05-28 13:38:25,140 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0084
2025-05-28 13:38:25,141 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0084 (delay: 0.72s)
2025-05-28 13:38:25,141 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 85/100: 0.81s
2025-05-28 13:38:25,141 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.81s for device device-0085
2025-05-28 13:38:25,964 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0085
2025-05-28 13:38:25,978 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0085 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:26,077 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0085 with password: this-is-my-password
2025-05-28 13:38:26,077 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0085
2025-05-28 13:38:26,077 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0085 (delay: 0.81s)
2025-05-28 13:38:26,077 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 86/100: 0.66s
2025-05-28 13:38:26,078 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.66s for device device-0086
2025-05-28 13:38:26,741 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0086
2025-05-28 13:38:26,758 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0086 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:26,846 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0086 with password: this-is-my-password
2025-05-28 13:38:26,846 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0086
2025-05-28 13:38:26,847 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0086 (delay: 0.66s)
2025-05-28 13:38:26,847 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 87/100: 0.78s
2025-05-28 13:38:26,847 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.78s for device device-0087
2025-05-28 13:38:27,642 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0087
2025-05-28 13:38:27,658 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0087 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:27,757 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0087 with password: this-is-my-password
2025-05-28 13:38:27,757 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0087
2025-05-28 13:38:27,757 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0087 (delay: 0.78s)
2025-05-28 13:38:27,758 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 88/100: 0.75s
2025-05-28 13:38:27,758 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.75s for device device-0088
2025-05-28 13:38:28,531 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0088
2025-05-28 13:38:28,545 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0088 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:28,676 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0088 with password: this-is-my-password
2025-05-28 13:38:28,676 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0088
2025-05-28 13:38:28,677 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0088 (delay: 0.75s)
2025-05-28 13:38:28,677 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 89/100: 0.82s
2025-05-28 13:38:28,677 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.82s for device device-0089
2025-05-28 13:38:29,506 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/9954be1d-b8a6-4394-98af-f2824394c707/device-0089
2025-05-28 13:38:29,522 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0089 created in tenant 9954be1d-b8a6-4394-98af-f2824394c707
2025-05-28 13:38:29,622 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0089 with password: this-is-my-password
2025-05-28 13:38:29,622 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0089
2025-05-28 13:38:29,623 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0089 (delay: 0.82s)
2025-05-28 13:38:29,623 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 90/100: 0.91s
2025-05-28 13:38:29,623 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.91s for device device-0090
2025-05-28 13:38:30,549 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0090
2025-05-28 13:38:30,564 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0090 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:30,670 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0090 with password: this-is-my-password
2025-05-28 13:38:30,670 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0090
2025-05-28 13:38:30,670 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0090 (delay: 0.91s)
2025-05-28 13:38:30,670 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 91/100: 0.85s
2025-05-28 13:38:30,670 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.85s for device device-0091
2025-05-28 13:38:31,530 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0091
2025-05-28 13:38:31,544 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0091 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:31,650 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0091 with password: this-is-my-password
2025-05-28 13:38:31,650 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0091
2025-05-28 13:38:31,651 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0091 (delay: 0.85s)
2025-05-28 13:38:31,651 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 92/100: 0.67s
2025-05-28 13:38:31,651 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.67s for device device-0092
2025-05-28 13:38:32,339 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0092
2025-05-28 13:38:32,353 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0092 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:32,460 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0092 with password: this-is-my-password
2025-05-28 13:38:32,460 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0092
2025-05-28 13:38:32,461 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0092 (delay: 0.67s)
2025-05-28 13:38:32,461 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 93/100: 0.81s
2025-05-28 13:38:32,461 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.81s for device device-0093
2025-05-28 13:38:33,283 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0093
2025-05-28 13:38:33,298 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0093 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:33,402 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0093 with password: this-is-my-password
2025-05-28 13:38:33,402 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0093
2025-05-28 13:38:33,402 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0093 (delay: 0.81s)
2025-05-28 13:38:33,402 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 94/100: 0.69s
2025-05-28 13:38:33,402 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.69s for device device-0094
2025-05-28 13:38:34,091 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0094
2025-05-28 13:38:34,107 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0094 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:34,209 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0094 with password: this-is-my-password
2025-05-28 13:38:34,209 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0094
2025-05-28 13:38:34,209 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0094 (delay: 0.69s)
2025-05-28 13:38:34,209 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 95/100: 0.78s
2025-05-28 13:38:34,209 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.78s for device device-0095
2025-05-28 13:38:34,998 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0095
2025-05-28 13:38:35,014 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0095 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:35,112 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0095 with password: this-is-my-password
2025-05-28 13:38:35,112 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0095
2025-05-28 13:38:35,112 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0095 (delay: 0.78s)
2025-05-28 13:38:35,112 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 96/100: 0.86s
2025-05-28 13:38:35,112 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.86s for device device-0096
2025-05-28 13:38:35,981 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0096
2025-05-28 13:38:35,996 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0096 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:36,098 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0096 with password: this-is-my-password
2025-05-28 13:38:36,098 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0096
2025-05-28 13:38:36,099 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0096 (delay: 0.86s)
2025-05-28 13:38:36,099 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 97/100: 0.85s
2025-05-28 13:38:36,099 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.85s for device device-0097
2025-05-28 13:38:36,960 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0097
2025-05-28 13:38:36,976 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0097 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:37,079 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0097 with password: this-is-my-password
2025-05-28 13:38:37,079 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0097
2025-05-28 13:38:37,080 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0097 (delay: 0.85s)
2025-05-28 13:38:37,080 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 98/100: 0.82s
2025-05-28 13:38:37,080 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.82s for device device-0098
2025-05-28 13:38:37,912 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0098
2025-05-28 13:38:37,923 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0098 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:38,002 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0098 with password: this-is-my-password
2025-05-28 13:38:38,002 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0098
2025-05-28 13:38:38,002 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0098 (delay: 0.82s)
2025-05-28 13:38:38,002 - DEBUG    - core.reporting                 - reporting.py:603 - Registration delay for device 99/100: 0.72s
2025-05-28 13:38:38,002 - DEBUG    - core.infrastructure            - infrastructure.py:334 - Applying registration delay of 0.72s for device device-0099
2025-05-28 13:38:38,740 - DEBUG    - core.infrastructure            - infrastructure.py:79 - Creating device: https://192.168.1.4:28443/v1/devices/640f6151-bc49-4ec3-a0a4-97dca602ca05/device-0099
2025-05-28 13:38:38,761 - INFO     - core.infrastructure            - infrastructure.py:84 - Device device-0099 created in tenant 640f6151-bc49-4ec3-a0a4-97dca602ca05
2025-05-28 13:38:38,859 - DEBUG    - core.infrastructure            - infrastructure.py:137 - Successfully set credentials for device device-0099 with password: this-is-my-password
2025-05-28 13:38:38,860 - INFO     - core.infrastructure            - infrastructure.py:92 - Credentials set for device device-0099
2025-05-28 13:38:38,860 - DEBUG    - core.reporting                 - reporting.py:586 - Registration successful for device-0099 (delay: 0.72s)
2025-05-28 13:38:38,860 - INFO     - core.infrastructure            - infrastructure.py:364 - Created 100 devices successfully with throttling
2025-05-28 13:38:38,862 - INFO     - core.infrastructure            - infrastructure.py:374 - Validating devices with initial telemetry (throttled setup)...
2025-05-28 13:38:38,958 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0000 using password: this-is-my-password
2025-05-28 13:38:39,283 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0001 using password: this-is-my-password
2025-05-28 13:38:39,597 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0002 using password: this-is-my-password
2025-05-28 13:38:39,922 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0003 using password: this-is-my-password
2025-05-28 13:38:40,252 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0004 using password: this-is-my-password
2025-05-28 13:38:40,578 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0005 using password: this-is-my-password
2025-05-28 13:38:40,902 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0006 using password: this-is-my-password
2025-05-28 13:38:41,227 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0007 using password: this-is-my-password
2025-05-28 13:38:41,549 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0008 using password: this-is-my-password
2025-05-28 13:38:41,865 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0009 using password: this-is-my-password
2025-05-28 13:38:42,196 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0010 using password: this-is-my-password
2025-05-28 13:38:42,519 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0011 using password: this-is-my-password
2025-05-28 13:38:42,856 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0012 using password: this-is-my-password
2025-05-28 13:38:43,166 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0013 using password: this-is-my-password
2025-05-28 13:38:43,450 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0014 using password: this-is-my-password
2025-05-28 13:38:43,731 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0015 using password: this-is-my-password
2025-05-28 13:38:44,056 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0016 using password: this-is-my-password
2025-05-28 13:38:44,374 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0017 using password: this-is-my-password
2025-05-28 13:38:44,691 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0018 using password: this-is-my-password
2025-05-28 13:38:45,016 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0019 using password: this-is-my-password
2025-05-28 13:38:45,337 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0020 using password: this-is-my-password
2025-05-28 13:38:45,660 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0021 using password: this-is-my-password
2025-05-28 13:38:45,980 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0022 using password: this-is-my-password
2025-05-28 13:38:46,296 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0023 using password: this-is-my-password
2025-05-28 13:38:46,621 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0024 using password: this-is-my-password
2025-05-28 13:38:46,946 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0025 using password: this-is-my-password
2025-05-28 13:38:47,253 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0026 using password: this-is-my-password
2025-05-28 13:38:47,569 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0027 using password: this-is-my-password
2025-05-28 13:38:47,872 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0028 using password: this-is-my-password
2025-05-28 13:38:48,191 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0029 using password: this-is-my-password
2025-05-28 13:38:48,476 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0030 using password: this-is-my-password
2025-05-28 13:38:48,797 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0031 using password: this-is-my-password
2025-05-28 13:38:49,077 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0032 using password: this-is-my-password
2025-05-28 13:38:49,410 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0033 using password: this-is-my-password
2025-05-28 13:38:49,733 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0034 using password: this-is-my-password
2025-05-28 13:38:50,060 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0035 using password: this-is-my-password
2025-05-28 13:38:50,376 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0036 using password: this-is-my-password
2025-05-28 13:38:50,701 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0037 using password: this-is-my-password
2025-05-28 13:38:51,026 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0038 using password: this-is-my-password
2025-05-28 13:38:51,345 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0039 using password: this-is-my-password
2025-05-28 13:38:51,662 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0040 using password: this-is-my-password
2025-05-28 13:38:51,988 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0041 using password: this-is-my-password
2025-05-28 13:38:52,313 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0042 using password: this-is-my-password
2025-05-28 13:38:52,623 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0043 using password: this-is-my-password
2025-05-28 13:38:52,968 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0044 using password: this-is-my-password
2025-05-28 13:38:53,259 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0045 using password: this-is-my-password
2025-05-28 13:38:53,578 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0046 using password: this-is-my-password
2025-05-28 13:38:53,904 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0047 using password: this-is-my-password
2025-05-28 13:38:54,229 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0048 using password: this-is-my-password
2025-05-28 13:38:54,551 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0049 using password: this-is-my-password
2025-05-28 13:38:54,874 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0050 using password: this-is-my-password
2025-05-28 13:38:55,188 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0051 using password: this-is-my-password
2025-05-28 13:38:55,515 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0052 using password: this-is-my-password
2025-05-28 13:38:55,840 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0053 using password: this-is-my-password
2025-05-28 13:38:56,170 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0054 using password: this-is-my-password
2025-05-28 13:38:56,495 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0055 using password: this-is-my-password
2025-05-28 13:38:56,822 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0056 using password: this-is-my-password
2025-05-28 13:38:57,148 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0057 using password: this-is-my-password
2025-05-28 13:38:57,470 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0058 using password: this-is-my-password
2025-05-28 13:38:57,794 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0059 using password: this-is-my-password
2025-05-28 13:38:58,114 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0060 using password: this-is-my-password
2025-05-28 13:38:58,437 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0061 using password: this-is-my-password
2025-05-28 13:38:58,757 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0062 using password: this-is-my-password
2025-05-28 13:38:59,055 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0063 using password: this-is-my-password
2025-05-28 13:38:59,382 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0064 using password: this-is-my-password
2025-05-28 13:38:59,710 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0065 using password: this-is-my-password
2025-05-28 13:39:00,023 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0066 using password: this-is-my-password
2025-05-28 13:39:00,350 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0067 using password: this-is-my-password
2025-05-28 13:39:00,680 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0068 using password: this-is-my-password
2025-05-28 13:39:01,001 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0069 using password: this-is-my-password
2025-05-28 13:39:01,317 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0070 using password: this-is-my-password
2025-05-28 13:39:01,641 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0071 using password: this-is-my-password
2025-05-28 13:39:01,971 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0072 using password: this-is-my-password
2025-05-28 13:39:02,292 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0073 using password: this-is-my-password
2025-05-28 13:39:02,608 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0074 using password: this-is-my-password
2025-05-28 13:39:02,966 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0075 using password: this-is-my-password
2025-05-28 13:39:03,275 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0076 using password: this-is-my-password
2025-05-28 13:39:03,577 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0077 using password: this-is-my-password
2025-05-28 13:39:04,212 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0078 using password: this-is-my-password
2025-05-28 13:39:04,537 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0079 using password: this-is-my-password
2025-05-28 13:39:04,854 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0080 using password: this-is-my-password
2025-05-28 13:39:05,173 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0081 using password: this-is-my-password
2025-05-28 13:39:05,499 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0082 using password: this-is-my-password
2025-05-28 13:39:05,817 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0083 using password: this-is-my-password
2025-05-28 13:39:06,146 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0084 using password: this-is-my-password
2025-05-28 13:39:06,472 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0085 using password: this-is-my-password
2025-05-28 13:39:06,795 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0086 using password: this-is-my-password
2025-05-28 13:39:07,123 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0087 using password: this-is-my-password
2025-05-28 13:39:07,443 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0088 using password: this-is-my-password
2025-05-28 13:39:07,761 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0089 using password: this-is-my-password
2025-05-28 13:39:08,083 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0090 using password: this-is-my-password
2025-05-28 13:39:08,404 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0091 using password: this-is-my-password
2025-05-28 13:39:08,728 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0092 using password: this-is-my-password
2025-05-28 13:39:09,050 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0093 using password: this-is-my-password
2025-05-28 13:39:09,366 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0094 using password: this-is-my-password
2025-05-28 13:39:09,678 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0095 using password: this-is-my-password
2025-05-28 13:39:10,004 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0096 using password: this-is-my-password
2025-05-28 13:39:10,329 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0097 using password: this-is-my-password
2025-05-28 13:39:10,659 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0098 using password: this-is-my-password
2025-05-28 13:39:10,977 - DEBUG    - core.infrastructure            - infrastructure.py:171 - Validation successful for device device-0099 using password: this-is-my-password
2025-05-28 13:39:10,978 - INFO     - core.infrastructure            - infrastructure.py:396 - Validation complete (throttled setup): 100/100 devices validated
2025-05-28 13:39:10,978 - DEBUG    - core.reporting                 - reporting.py:277 - ReportingManager validation stats updated: Success=200, Failed=0, Total=100
2025-05-28 13:39:10,978 - INFO     - core.infrastructure            - infrastructure.py:411 - ✅ All devices validated successfully (throttled setup)! Ready to start load testing.
2025-05-28 13:39:10,981 - INFO     - core.reporting                 - reporting.py:172 - Test initialized. protocol_stats: {'http': {'messages_sent': 0, 'messages_failed': 0, 'devices': 0}} for input protocols: ['http']
2025-05-28 13:39:11,069 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,125 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 32.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,179 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 28.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,232 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,285 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,338 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.32s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,395 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,448 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,502 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,555 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.89s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,608 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.77s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,663 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,717 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.04s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,769 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.08s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,823 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.67s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,875 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,932 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:11,986 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,043 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,097 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,151 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.53s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,205 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,257 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,310 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,365 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,419 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,472 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,525 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,578 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,631 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,687 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.63s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,742 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,795 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,848 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.87s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,901 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.08s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:12,955 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,009 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.21s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,065 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,120 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.67s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,174 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,228 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.20s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,281 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,333 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,388 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,440 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.19s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,493 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,547 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,599 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,652 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,705 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.21s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,759 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 28.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,812 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,866 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,922 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.08s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:13,974 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,028 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.07s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,083 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,137 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,192 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,246 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,300 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,354 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,407 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,461 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,514 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,566 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,619 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,672 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.15s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,725 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,780 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 45.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,837 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,890 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.07s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,945 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:14,999 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,055 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,108 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 38.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,162 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,217 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,270 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,323 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,376 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,430 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.79s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,482 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.29s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,537 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,590 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.44s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,642 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,699 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,752 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.20s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,805 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,858 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,911 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:15,964 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,018 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 26.65s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,071 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,125 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,181 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,233 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,288 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,340 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:16,413 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:17,089 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:17,994 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:18,382 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:18,977 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,125 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,126 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,212 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,227 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,303 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,339 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:19,421 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,587 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,831 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:19,884 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,006 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,029 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,484 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,524 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,554 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.20s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:20,724 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:20,824 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,919 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,926 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:20,986 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 23 (2.3/s), Failed: 0 (0.0/s), Avg Lat: 7707.8ms, P95: 8922.0ms, P99: 8937.0ms
2025-05-28 13:39:21,192 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:21,312 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,334 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,505 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,520 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,594 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:21,620 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,704 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,721 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,736 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:21,824 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 26.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:21,871 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:21,932 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,032 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,032 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,133 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,229 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:22,236 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,354 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:22,524 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,602 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.68s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:22,773 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,777 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,801 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,801 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,805 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,806 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,821 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,821 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:22,882 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,901 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,901 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,909 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,909 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,909 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,912 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,916 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,916 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,919 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,926 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,936 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,936 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,976 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:22,985 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,008 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,021 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,021 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,023 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,025 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,036 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,042 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,076 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,077 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,078 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,080 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,081 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,082 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,083 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,085 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,101 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,107 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,107 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,119 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,119 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,120 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,128 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,129 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,134 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,136 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,136 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,139 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,142 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,143 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,203 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,203 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,204 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,208 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,208 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,213 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,216 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,218 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,220 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,220 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,223 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,225 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,225 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,240 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,240 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,273 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,273 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,274 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.92s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,277 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,280 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,281 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,301 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,319 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,319 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,319 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,320 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,323 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,378 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,379 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,381 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,386 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,415 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,419 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,452 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,580 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.07s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,688 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 22.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,688 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,720 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 55.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,720 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,720 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 31.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,754 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,777 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,787 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,808 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,816 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,816 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:23,890 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:23,969 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,123 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,192 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,193 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,217 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,217 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.27s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,259 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,285 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,285 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,421 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,522 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,522 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,587 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,748 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 34.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,812 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,851 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,852 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.14s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,873 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:24,889 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,919 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,942 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:24,979 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 24.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,083 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,083 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,149 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,272 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 27.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,372 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,458 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.80s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,562 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,677 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,709 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,755 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.31s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:25,780 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,796 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:25,822 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,110 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,157 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,211 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,228 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,251 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,297 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,297 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.15s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,345 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,345 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,346 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,365 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,365 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,413 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,413 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,545 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,545 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.52s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,546 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 29.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,592 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,650 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,650 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,659 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,672 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,855 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,920 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,920 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,963 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,963 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:26,988 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:26,991 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,030 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,183 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,245 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,264 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,308 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,313 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,375 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,402 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.67s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,499 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,696 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,696 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,803 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,803 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,834 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,834 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,906 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,906 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:27,906 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 42.63s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,972 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:27,973 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,037 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,037 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.45s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,066 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,066 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,111 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,133 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,133 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,140 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,175 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.27s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,205 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,245 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,656 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,719 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,762 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,786 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:28,842 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 41.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:28,943 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,296 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,342 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,393 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,393 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 60.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,411 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,465 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.71s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,466 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,531 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,531 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,597 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,671 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.87s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,671 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.87s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,671 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.98s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,671 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:29,743 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,743 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,747 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:29,747 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,029 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,091 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,091 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,127 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,159 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,160 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,160 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,228 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,228 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,294 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,494 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,598 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,633 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 24.86s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,633 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,634 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.42s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,702 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,702 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,703 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,772 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,849 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:30,874 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,922 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:30,987 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 195 (17.2/s), Failed: 0 (0.0/s), Avg Lat: 4432.0ms, P95: 9703.0ms, P99: 10453.0ms
2025-05-28 13:39:31,114 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,177 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,177 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.79s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,177 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,218 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,245 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,246 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,246 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.92s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,246 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,249 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,313 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,313 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,424 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.27s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,455 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,530 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,536 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,765 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.31s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,856 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 28.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,872 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,924 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:31,979 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,979 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.17s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:31,979 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,011 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,072 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,072 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,072 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,072 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 45.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,083 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,140 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,303 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,371 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,489 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,489 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 60.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,520 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,582 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,582 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,585 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,594 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,644 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 41.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:32,650 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:32,710 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:33,172 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.45s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:33,274 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:33,483 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:33,587 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,137 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,242 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,242 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.86s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,309 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,524 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.09s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,628 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,679 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 36.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,679 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,727 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,749 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,749 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,774 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:34,793 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,842 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:34,930 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,039 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,180 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.50s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,228 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,228 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,287 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,298 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,302 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,322 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 29.32s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,387 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,522 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.14s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,568 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,568 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,624 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,642 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,642 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,692 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,769 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:35,769 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:35,836 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,006 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,006 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 44.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,083 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.86s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,108 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,108 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,150 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,192 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,270 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,379 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,480 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,750 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:36,854 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:36,999 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,077 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,100 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,143 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,143 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.04s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,209 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,465 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,465 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,539 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,540 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,895 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,996 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:37,996 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.53s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:37,996 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.19s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,063 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,063 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,301 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,409 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,562 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,668 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,702 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.89s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,779 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,781 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,810 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.08s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,846 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,876 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:38,900 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:38,968 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,041 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.29s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,060 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,155 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,160 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,258 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.04s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,320 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,361 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,397 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,691 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,794 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:39,954 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:39,954 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,047 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 35.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,057 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,057 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,095 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,117 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,173 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,233 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.09s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,264 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,318 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,341 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,344 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,408 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,560 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,622 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.32s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,664 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,690 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,746 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,746 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,808 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.80s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,836 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,839 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,880 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:40,977 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:40,988 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 272 (7.7/s), Failed: 0 (0.0/s), Avg Lat: 3200.9ms, P95: 9500.0ms, P99: 10329.0ms
2025-05-28 13:39:40,993 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,088 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,088 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,131 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,221 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,256 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,287 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.19s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,334 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,370 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,425 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 49.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,502 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,525 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,569 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,611 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,685 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,721 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,721 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.29s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,722 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.29s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,767 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 27.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:41,792 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,799 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,806 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:41,834 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,155 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.98s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,156 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,186 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,257 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,259 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,259 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,294 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,384 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,384 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.15s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,384 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.68s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,385 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,449 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.14s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,453 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,458 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,458 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,529 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,555 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.32s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,602 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,630 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,672 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,711 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 41.21s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,742 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 27.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,781 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,805 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,810 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,885 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,885 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,959 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:42,962 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:42,963 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,005 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,040 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,042 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,086 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,087 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,087 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,154 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,158 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,269 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,269 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,342 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,344 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,470 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.32s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,533 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,564 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,564 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,571 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,602 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,638 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,648 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,767 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,861 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:43,881 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:43,944 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,014 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.44s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,107 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,231 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,334 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,467 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,588 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,669 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,731 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,770 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,770 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:44,798 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,837 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:44,948 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,009 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 58.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,010 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,056 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,078 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,082 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,180 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.53s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,180 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,285 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,288 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,353 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 33.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,455 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,493 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.19s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,589 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,589 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,656 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,656 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,721 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,721 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,801 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,801 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,869 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,869 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,870 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 24.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,926 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:45,938 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,952 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:45,992 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,064 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,173 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,188 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,278 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,481 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.53s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,584 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,609 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,609 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,633 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:46,706 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,711 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,712 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:46,963 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,009 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,056 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,056 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,065 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,080 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,119 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.21s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,120 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 24.45s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,120 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,120 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,121 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,131 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,132 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,188 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,200 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,203 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,207 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,207 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,416 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,416 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,523 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,526 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,713 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,830 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,899 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:47,993 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:47,993 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,023 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,059 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,091 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,146 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,253 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,253 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,321 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,642 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,735 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,744 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,797 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,801 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,844 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:48,865 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:48,913 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,091 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,205 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,450 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,451 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,496 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,554 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,559 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,578 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,652 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,683 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,753 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,762 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,791 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.19s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,852 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,861 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,919 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:49,919 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.21s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:49,985 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,020 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,086 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,189 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,292 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,372 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.69s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,465 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,474 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,532 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,681 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,783 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:50,899 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,930 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:50,990 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 372 (10.0/s), Failed: 0 (0.0/s), Avg Lat: 2362.6ms, P95: 9343.0ms, P99: 10203.0ms
2025-05-28 13:39:50,993 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,002 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,069 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.79s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,115 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,162 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,162 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,169 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,186 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,232 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,232 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,232 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,298 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,425 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,527 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,565 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,635 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,635 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,701 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,752 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 28.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,815 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,815 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.45s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,829 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,882 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,882 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:51,893 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:51,959 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,016 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,120 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,120 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,135 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,197 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,202 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,282 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,347 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.14s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,354 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,393 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,413 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,462 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,462 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,532 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,627 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,627 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.86s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,700 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,700 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,797 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,842 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,869 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,907 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:52,928 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:52,974 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,014 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,046 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,046 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,082 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,114 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,114 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,115 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,115 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.79s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,198 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,200 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,344 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,448 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,560 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.15s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,591 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.42s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,665 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,665 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,671 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,731 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,732 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,798 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,798 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.09s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,864 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:53,902 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.02s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,948 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.87s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:53,968 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,015 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,087 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,087 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,187 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,187 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,187 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,252 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,305 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,383 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,384 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,445 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 29.77s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,451 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,512 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,723 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,832 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,834 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,864 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.07s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,901 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,931 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:54,931 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,973 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.00s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:54,997 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,040 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,250 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,312 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,359 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 31.18s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,370 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,387 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,431 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,452 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,453 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,498 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,532 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,532 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,566 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,566 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.71s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,645 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,731 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,834 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:55,889 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,966 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:55,970 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,032 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,033 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,108 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,183 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,298 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,298 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,365 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,588 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,698 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,853 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,900 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:56,956 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:56,970 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,149 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,242 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,319 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,320 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.68s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,398 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,398 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,429 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,429 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,430 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.78s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,430 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,466 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,472 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,497 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,504 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,728 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,821 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,848 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,884 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,884 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 34.24s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,888 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,931 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,931 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:57,959 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,959 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,997 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:57,998 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,070 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.92s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,130 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,176 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,176 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,184 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,203 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,238 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 40.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,245 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,248 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,306 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,306 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.31s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,374 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,547 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.09s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,664 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,688 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,749 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:58,756 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:58,816 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,201 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.31s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,201 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,201 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,247 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,298 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,298 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,298 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 24.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,305 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,333 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,365 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,792 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,809 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,854 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.22s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:39:59,913 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,917 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,930 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:39:59,979 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 22.17s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,100 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,135 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.67s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,217 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,476 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.65s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,581 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,676 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,793 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,830 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,861 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,935 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,935 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.52s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:00,943 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:00,991 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 474 (10.2/s), Failed: 0 (0.0/s), Avg Lat: 1871.6ms, P95: 9235.0ms, P99: 10171.0ms
2025-05-28 13:40:01,002 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,126 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,126 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.09s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,215 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,215 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,283 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 32.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,329 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,373 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,397 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,516 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,562 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,562 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.35s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,626 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,637 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,650 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,651 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,717 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,777 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,840 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:01,863 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,919 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:01,963 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,024 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,024 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.72s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,024 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 40.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,037 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,093 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,093 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,093 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,196 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,300 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,300 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,334 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,368 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,396 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.44s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,401 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,427 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.33s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,464 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,464 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:02,495 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,545 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:02,941 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,042 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,080 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,111 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.90s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,148 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,173 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,173 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.29s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,177 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,241 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,241 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,460 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,507 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.04s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,553 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,582 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,582 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.63s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,661 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,662 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:03,730 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:03,943 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,010 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,238 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.92s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,347 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 22.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,347 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.79s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,354 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,415 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,424 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,722 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,743 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.20s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,743 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 32.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,842 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,845 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,845 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:04,889 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:04,964 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,045 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.42s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,106 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,149 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,149 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,183 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,214 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,226 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,279 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,279 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,321 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,321 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,346 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,390 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,390 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,537 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.65s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,568 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.28s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,641 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,641 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.06s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,641 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 25.74s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,648 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,709 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,719 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,770 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.70s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,847 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.97s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:05,850 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,915 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:05,972 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,003 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,049 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.30s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,059 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,075 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,116 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,237 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 27.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,314 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,341 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,341 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,393 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,408 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:06,592 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.99s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:06,694 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,008 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.80s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,008 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.81s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,111 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,112 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,241 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.38s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,302 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,344 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,369 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,458 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,563 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,644 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,645 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.87s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,690 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.91s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,737 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.73s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,754 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,754 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,764 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,806 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,806 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.27s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,873 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:07,956 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:07,956 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,058 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,061 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,220 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,298 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 23.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,337 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,367 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,407 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.04s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,409 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 16.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,417 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,480 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,487 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,487 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,546 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.45s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,546 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.78s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,547 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.66s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,633 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,633 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,633 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,670 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,738 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,857 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.37s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,921 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:08,977 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:08,992 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,059 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.93s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,122 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,148 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,188 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,216 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,283 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,481 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,528 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.71s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,580 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,597 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,637 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.46s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,637 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.68s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,637 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,685 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.83s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,737 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,737 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,745 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,762 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,762 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,838 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:09,995 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.49s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:09,995 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.26s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,074 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,074 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,104 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,104 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,110 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,142 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,142 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.89s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,142 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.31s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,159 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,182 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,216 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,217 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 10.62s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,227 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,261 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.80s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,261 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.42s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,283 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,328 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,336 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,336 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 33.64s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,403 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,521 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,521 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.12s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,599 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,599 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,599 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,641 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,643 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,667 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,667 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,680 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,832 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 2.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,928 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:10,987 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 5.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:10,992 - INFO     - core.reporting                 - reporting.py:558 - Stats - Sent: 582 (10.8/s), Failed: 0 (0.0/s), Avg Lat: 1539.7ms, P95: 8984.0ms, P99: 9953.0ms
2025-05-28 13:40:11,088 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,127 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.56s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,159 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.84s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,198 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,225 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,298 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,403 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,403 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.41s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,469 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,470 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,535 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,535 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.13s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,561 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.48s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,561 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 43.47s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,605 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,629 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,638 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,638 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.03s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,650 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.11s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,650 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.36s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,718 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,718 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,718 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,766 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.25s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,766 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 12.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,844 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.78s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:11,848 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,848 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:11,913 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,399 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 35.95s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,518 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,603 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.43s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,603 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.53s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,673 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,673 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,727 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.96s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,727 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 20.67s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,796 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,796 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,867 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,899 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.94s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:12,974 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,978 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:12,978 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.57s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,047 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,085 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.52s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,154 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,154 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.86s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,221 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,288 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 34.16s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,381 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,383 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,412 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 21.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,448 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,478 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,629 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.51s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:13,721 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:13,972 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 6.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,076 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,364 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.05s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,464 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,662 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.12s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,755 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 19.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,782 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,782 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 4.58s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,822 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,860 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,909 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.39s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,909 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 8.59s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:14,995 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:14,996 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,033 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 1.23s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,101 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,102 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.76s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,142 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.55s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,152 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 3.50s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,170 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,219 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,220 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,329 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.60s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,448 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,530 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 14.20s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,531 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 11.85s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,633 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,633 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,765 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 15.01s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,766 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.75s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,766 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 7.54s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,868 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,868 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,871 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,917 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 9.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,917 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.34s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:15,988 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,988 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:15,988 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 17.61s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:16,055 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:16,055 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 18.82s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:16,055 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.40s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:16,104 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 0.10s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:16,122 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:16,125 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:16,173 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:16,275 - DEBUG    - core.reporting                 - reporting.py:630 - Poisson interval: 13.88s (base: 10.00s, λ: 6.00/min)
2025-05-28 13:40:16,293 - INFO     - core.load_tester               - load_tester.py:242 - Stopping load test execution...
2025-05-28 13:40:16,294 - INFO     - core.load_tester               - load_tester.py:246 - Waiting for 0 worker threads to join...
2025-05-28 13:40:16,294 - INFO     - core.load_tester               - load_tester.py:252 - All worker threads processed.
2025-05-28 13:40:16,296 - WARNING  - core.reporting                 - reporting.py:295 - Device count mismatch: Protocol stats show 0 devices, but actual count is 100
2025-05-28 13:40:16,298 - INFO     - core.reporting                 - reporting.py:204 - Report saved to: D:\business\3_Freelancing_Work Projects\3_Eco_wave_dynamis\01_Project_Files\15_Hono_Load_Testing\python-script-organize\run_results_20250528_133725\hono_test_report_20250528_134016.txt
2025-05-28 13:40:16,315 - DEBUG    - matplotlib.font_manager        - font_manager.py:1411 - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-05-28 13:40:16,315 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,315 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,315 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,316 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,317 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,318 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-56It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-56It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,319 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Bd.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,320 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,321 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,322 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-66MdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-76BdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,323 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Scary Feet.ttf', name='Scary Feet ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,324 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,325 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Harlow Solid Regular.ttf', name='Harlow Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,326 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\BLOODY.TTF', name='Bloody', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-28 13:40:16,327 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-65Md.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,328 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-66MdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,329 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,330 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,331 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\VENOM.ttf', name='VENOM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,332 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,333 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,334 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,335 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-76BdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,336 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,337 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-75Bd.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Another Danger Slanted - Demo.otf', name='Another Danger Slanted - Demo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,338 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\teamviewer15.otf', name='TeamViewer15', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\NoScary-regular.ttf', name='NoScary', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,339 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-28 13:40:16,340 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,341 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,342 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,343 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Bd.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-55Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,344 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,345 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,346 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,347 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,348 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,349 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\True Lies.ttf', name='True Lies', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,350 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,351 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,352 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,353 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,354 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,355 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,356 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,357 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-28 13:40:16,358 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,359 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Another Danger - Demo.otf', name='Another Danger - Demo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,360 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,361 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,362 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Flame.ttf', name='Flame', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,363 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,364 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,365 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-55Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,366 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-75Bd.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\teamviewer15.otf', name='TeamViewer15', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,367 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-65Md.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,368 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,369 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,370 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,371 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,372 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,373 - DEBUG    - matplotlib.font_manager        - font_manager.py:1454 - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-05-28 13:40:16,458 - DEBUG    - matplotlib.font_manager        - font_manager.py:1411 - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-05-28 13:40:16,458 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,458 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,458 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,459 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,460 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,461 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-56It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-56It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,462 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Bd.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,463 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,464 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,465 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-66MdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-76BdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,466 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Scary Feet.ttf', name='Scary Feet ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,467 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,468 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Harlow Solid Regular.ttf', name='Harlow Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,469 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\BLOODY.TTF', name='Bloody', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,470 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-65Md.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-28 13:40:16,471 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,472 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-66MdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,473 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,474 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,475 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\VENOM.ttf', name='VENOM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,476 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,477 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-76BdIt.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,478 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,479 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,480 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-75Bd.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Another Danger Slanted - Demo.otf', name='Another Danger Slanted - Demo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,481 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\teamviewer15.otf', name='TeamViewer15', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\NoScary-regular.ttf', name='NoScary', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,482 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,483 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,484 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,485 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,486 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Bd.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-55Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,487 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,488 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,489 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Bold.ttf', name='Artifakt Element', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,490 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,491 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,492 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Regular.ttf', name='Artifakt Element', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\True Lies.ttf', name='True Lies', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,493 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,494 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,495 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,496 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,497 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,498 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,499 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Artifakt Element Italic.ttf', name='Artifakt Element', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,500 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-05-28 13:40:16,501 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,502 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,503 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Another Danger - Demo.otf', name='Another Danger - Demo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,504 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,505 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,506 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Users\\tomis\\AppData\\Local\\Microsoft\\Windows\\Fonts\\Flame.ttf', name='Flame', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,507 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,508 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,509 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-55Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-05-28 13:40:16,510 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-75Bd.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\teamviewer15.otf', name='TeamViewer15', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,511 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,512 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-65Md.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,513 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,514 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,515 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,516 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,517 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,518 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,518 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-28 13:40:16,518 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-28 13:40:16,518 - DEBUG    - matplotlib.font_manager        - font_manager.py:1423 - findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-28 13:40:16,518 - DEBUG    - matplotlib.font_manager        - font_manager.py:1454 - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\tomis\\AppData\\Roaming\\Python\\Python311\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-05-28 13:40:16,682 - INFO     - core.reporting                 - reporting.py:831 - Throughput graph saved to run_results_20250528_133725\throughput_over_time_20250528_134016.png
2025-05-28 13:40:16,869 - INFO     - core.reporting                 - reporting.py:873 - Latency over time graph saved to run_results_20250528_133725\latency_over_time_20250528_134016.png
2025-05-28 13:40:17,042 - INFO     - core.reporting                 - reporting.py:905 - Latency distribution graph saved to run_results_20250528_133725\latency_distribution_20250528_134016.png
2025-05-28 13:40:17,214 - INFO     - core.reporting                 - reporting.py:930 - Registration delay graph saved to run_results_20250528_133725\registration_delays_20250528_134016.png
2025-05-28 13:40:17,375 - INFO     - core.reporting                 - reporting.py:955 - Poisson interval graph saved to run_results_20250528_133725\poisson_intervals_20250528_134016.png
2025-05-28 13:40:17,377 - INFO     - core.reporting                 - reporting.py:258 - Report updated with graph references: D:\business\3_Freelancing_Work Projects\3_Eco_wave_dynamis\01_Project_Files\15_Hono_Load_Testing\python-script-organize\run_results_20250528_133725\hono_test_report_20250528_134016.txt
2025-05-28 13:40:17,379 - DEBUG    - core.reporting                 - reporting.py:499 - Message sent for http. Current device count: 0
2025-05-28 13:40:55,127 - INFO     - stress_script                  - stress.py:515 - 
⏱️  Total test duration: 0.03 hours (104.1 seconds)
2025-05-28 13:40:55,128 - INFO     - stress_script                  - stress.py:516 - 📊 Generating final test report in run_test.finally...
2025-05-28 13:40:55,131 - WARNING  - core.reporting                 - reporting.py:295 - Device count mismatch: Protocol stats show 0 devices, but actual count is 100
2025-05-28 13:40:55,133 - INFO     - core.reporting                 - reporting.py:204 - Report saved to: D:\business\3_Freelancing_Work Projects\3_Eco_wave_dynamis\01_Project_Files\15_Hono_Load_Testing\python-script-organize\run_results_20250528_133725\hono_test_report_20250528_134055.txt
2025-05-28 13:40:55,322 - INFO     - core.reporting                 - reporting.py:831 - Throughput graph saved to run_results_20250528_133725\throughput_over_time_20250528_134055.png
2025-05-28 13:40:55,559 - INFO     - core.reporting                 - reporting.py:873 - Latency over time graph saved to run_results_20250528_133725\latency_over_time_20250528_134055.png
2025-05-28 13:40:55,735 - INFO     - core.reporting                 - reporting.py:905 - Latency distribution graph saved to run_results_20250528_133725\latency_distribution_20250528_134055.png
2025-05-28 13:40:55,911 - INFO     - core.reporting                 - reporting.py:930 - Registration delay graph saved to run_results_20250528_133725\registration_delays_20250528_134055.png
2025-05-28 13:40:56,076 - INFO     - core.reporting                 - reporting.py:955 - Poisson interval graph saved to run_results_20250528_133725\poisson_intervals_20250528_134055.png
2025-05-28 13:40:56,078 - INFO     - core.reporting                 - reporting.py:258 - Report updated with graph references: D:\business\3_Freelancing_Work Projects\3_Eco_wave_dynamis\01_Project_Files\15_Hono_Load_Testing\python-script-organize\run_results_20250528_133725\hono_test_report_20250528_134055.txt
2025-05-28 13:40:56,079 - INFO     - stress_script                  - stress.py:524 - ✅ Final test report generated in: run_results_20250528_133725
2025-05-28 13:40:56,101 - INFO     - stress_script                  - stress.py:983 - Script finished with exit code: 0
